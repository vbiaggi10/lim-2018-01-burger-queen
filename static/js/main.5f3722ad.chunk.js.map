{"version":3,"sources":["components/take_order/Breakfast.js","components/take_order/LunchDinner.js","components/take_order/TakeOrder.js","components/take_name/TakeName.js","App.js","components/page_404/Page404.js","Routes.js","serviceWorker.js","index.js"],"names":["Breakfast","react_default","a","createElement","className","lib","popout","header","this","handleShowItems","_this","data","map","breakfast","item","i","name","substr","onClick","handleOrder","bind","key","waves","concat","price","e","preventDefault","newTarget","target","split","props","takingOrder","Component","LunchDinner","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tempHamburgerName","tempHamburgerPrice","handleShowHamburguer","onChange","handleInputChange","checked","withSome","type","value","label","handleShowAccompaniments","handleShowDrinks","_this2","lunchdinner","hamburguesas","items","handleTypeHamburger","s","defaultValue","disabled","_this3","bebidas","_this4","acompa√±amientos","style","background","setState","localStorage","setItem","getItem","parseInt","TakeOrder","orders","totalOrders","myRef","React","createRef","handleCancel","small","right","title","active","take_order_Breakfast","take_order_LunchDinner","showOrder","totalPrice","handleChangeStatus","order","orderName","orderPrice","deleteOrder","id","push","acum","parsePrice","TakeName","tookName","take_order_TakeOrder","onSubmit","handleSubmit","handleChange","newState","App","href","take_name_TakeName","Page404","AppRoutes","src_App_0","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","render","BrowserRouter","Routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f3722ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Collapsible, CollapsibleItem } from 'react-materialize';\r\nimport data from '../../data/menu.json';\r\n\r\nclass Breakfast extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <Collapsible popout>\r\n          <CollapsibleItem header=\"Sandwiches\">\r\n            {this.handleShowItems(\"Sandwiches\")}\r\n          </CollapsibleItem>\r\n          <CollapsibleItem header=\"Bebidas\">\r\n            {this.handleShowItems(\"Bebidas\")}\r\n          </CollapsibleItem>\r\n        </Collapsible>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleShowItems(header) {\r\n    return data.map((breakfast) => {\r\n      return (breakfast.breakfast).map((item, i) => {\r\n        if(header === 'Sandwiches'){\r\n          if(item.name.substr(0, 4) === 'Sand'){\r\n            return (\r\n              <Button onClick={this.handleOrder.bind(this)} className='btn-item' key={i} waves='light' name={`${item.name}/${item.price}`}>{item.name}<br/>S/ {item.price}</Button>\r\n            )\r\n          }\r\n        }else{\r\n          if(item.name.substr(0, 4) === 'Caf√©' || item.name.substr(0, 4) === 'Jugo'){\r\n            return (\r\n              <Button onClick={this.handleOrder.bind(this)} className='btn-item' key={i} waves='light' name={`${item.name}/${item.price}`}>{item.name}<br/>S/ {item.price}</Button>\r\n            )\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  handleOrder(e) {\r\n    e.preventDefault();\r\n    const newTarget = e.target.name.split('/');\r\n    this.props.takingOrder(newTarget[0], newTarget[1])\r\n  }\r\n}\r\n\r\nexport default Breakfast;\r\n","import React, { Component } from 'react';\r\nimport { Button, Collapsible, CollapsibleItem, Input } from 'react-materialize';\r\nimport data from '../../data/menu.json';\r\n\r\nclass LunchDinner extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tempHamburgerName: '',\r\n      tempHamburgerPrice: ''\r\n    }\r\n\r\n    // this.myRef = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <Collapsible popout>\r\n          <CollapsibleItem header='Hamburguesas'>\r\n            <div>{this.handleShowHamburguer()}</div>\r\n            {/* <div>\r\n              <Button onClick={this.handleTypeHamburger.bind(this)} name='res' className='btn-hamburger' waves='light'>Res</Button>\r\n              <Button onClick={this.handleTypeHamburger.bind(this)} name='pollo' className='btn-hamburger' waves='light'>Pollo</Button>\r\n              <Button onClick={this.handleTypeHamburger.bind(this)} name='vegetariana' className='btn-hamburger' waves='light'>Vegetariana</Button>\r\n            </div> */}\r\n            <div className='hamburger-type'>\r\n              <Input onChange={this.handleInputChange.bind(this)} checked={this.state.withSome} type='checkbox' value='red' name='/0' price='0' label='Normal' />\r\n              <Input onChange={this.handleInputChange.bind(this)} checked={this.state.withSome} type='checkbox' value='red' name='Queso/1' price='1' label='Queso + S/.1' />\r\n              <Input onChange={this.handleInputChange.bind(this)} checked={this.state.withSome} type='checkbox' value='red' name='Huevo/1' price='1' label='Huevo + S/.1' />\r\n            </div>\r\n          </CollapsibleItem>\r\n          <CollapsibleItem header='Acompa√±amientos'>\r\n            {this.handleShowAccompaniments()}\r\n          </CollapsibleItem>\r\n          <CollapsibleItem header='Bebidas'>\r\n            {this.handleShowDrinks()}\r\n          </CollapsibleItem>\r\n        </Collapsible>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleShowHamburguer() {\r\n    return data.map((lunchdinner) => {\r\n      return lunchdinner.lunchdinner.hamburguesas.map((items, i) => {\r\n        return (\r\n          <div className=\"col s6\"  key={`h${i}`}>\r\n            {/* <Button onClick={this.handleHamburguer.bind(this)} className='btn-item' waves='light' name={`${items.name}/${items.price}`}>{items.name}<br />S/ {items.price}</Button> */}\r\n            <Input onChange={this.handleTypeHamburger.bind(this)} s={12} type='select' label={`Seleccione el tipo de ${items.name} S/ ${items.price}`} defaultValue='disabled' name={`${items.name}/${items.price}`}>\r\n              <option value='disabled' disabled>Tipo</option>\r\n              <option value='res'>Res</option>\r\n              <option value='pollo'>Pollo</option>\r\n              <option value='vegetariana'>Vegetariana</option>\r\n            </Input>\r\n          </div>\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n  handleShowDrinks() {\r\n    return data.map((lunchdinner) => {\r\n      return lunchdinner.lunchdinner.bebidas.map((items, i) => {\r\n        return (\r\n          <Button onClick={this.handleOrder.bind(this)} className='btn-item' key={`b${i}`} waves='light' name={`${items.name}/${items.price}`}>{items.name}<br />S/ {items.price}</Button>\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n  handleShowAccompaniments() {\r\n    return data.map((lunchdinner) => {\r\n      return lunchdinner.lunchdinner.acompa√±amientos.map((items, i) => {\r\n        return (\r\n          <Button onClick={this.handleOrder.bind(this)} className='btn-item' key={`a${i}`} waves='light' name={`${items.name}/${items.price}`}>{items.name}<br />S/ {items.price}</Button>\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n  handleHamburguer(e) {\r\n    e.preventDefault();\r\n    e.target.style.background = '#7e7e7e';\r\n    const newTarget = e.target.name.split('/');\r\n    // console.log(this.myRef.current.value)\r\n    this.setState({ tempHamburgerName: newTarget[0], tempHamburgerPrice: newTarget[1] })\r\n  }\r\n\r\n  handleTypeHamburger(e) {\r\n    e.preventDefault();\r\n    const newTarget = e.target.name.split('/');\r\n    const name = newTarget[0] + ' ' + e.target.value;\r\n    localStorage.setItem('tempHamburgerName', name)\r\n    localStorage.setItem('tempHamburgerPrice', newTarget[1])\r\n    // this.props.takingOrder(name, newTarget[1])\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    e.preventDefault();\r\n    const target = e.target;\r\n    const newTarget = e.target.name.split('/');\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = localStorage.getItem('tempHamburgerName') + (target.name === '/0' ? newTarget[0] : ` + ${newTarget[0]}`);\r\n    const price = parseInt(localStorage.getItem('tempHamburgerPrice')) + parseInt(newTarget[1]);\r\n    \r\n    if (value) {\r\n      this.props.takingOrder(name, price)\r\n    }\r\n  }\r\n\r\n  handleOrder(e) {\r\n    e.preventDefault();\r\n    const newTarget = e.target.name.split('/');\r\n    this.props.takingOrder(newTarget[0], newTarget[1])\r\n  }\r\n}\r\n\r\nexport default LunchDinner;\r\n","import React, { Component } from 'react';\r\nimport {Tabs, Tab, Container, Button, Icon} from 'react-materialize';\r\nimport Breakfast from './Breakfast';\r\nimport LunchDinner from './LunchDinner';\r\n\r\nclass TakeOrder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      orders: [],\r\n      totalOrders: []\r\n    }\r\n    this.myRef = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"container-nav\">\r\n            <h5>Pedido de {this.props.name}</h5>\r\n            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={this.handleCancel.bind(this)}>Cancelar\r\n              <Icon small right>close</Icon>\r\n            </button>\r\n        </div>\r\n        <Container className=\"col s8\">\r\n          <Tabs className='tab-demo z-depth-1'>\r\n            <Tab title=\"Breakfast\" className=\"col s6\" active> <Breakfast takingOrder={this.takingOrder.bind(this)}/> </Tab>\r\n            <Tab title=\"Lunch / Dinner\" className=\"col s6\"> <LunchDinner takingOrder={this.takingOrder.bind(this)}/> </Tab>\r\n          </Tabs>\r\n        </Container>\r\n        <Container className=\"col s4\">\r\n          <h5>Pedido</h5>\r\n          <div>{this.showOrder()}</div>\r\n          <div>{this.totalPrice()}</div>\r\n          <Button onClick={this.handleChangeStatus.bind(this)} waves='light'>Enviar a cocina</Button>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showOrder() {\r\n    if(this.state.orders !== []){\r\n      return this.state.orders.map( (order, i) => {\r\n        return (\r\n          <div key={`show${i}`}>\r\n            <span>{order.orderName} S/ {order.orderPrice}</span> \r\n            <button className='btn-delete' onClick={this.deleteOrder.bind(this)} name={order.orderName} id={i}>üóëÔ∏è</button>\r\n          </div>)\r\n      })\r\n    }\r\n  }\r\n\r\n  takingOrder(name, price) {\r\n    const { orders } = this.state;\r\n    orders.push({\r\n      // orderId: '',\r\n      orderName: name,\r\n      orderPrice: price\r\n    });\r\n    // const newArray = orders.map((order, i) => {\r\n    //   order.orderId = i;\r\n    //   return order;\r\n    // })\r\n    // console.log(newArray)\r\n    this.setState({orders: orders})\r\n  }\r\n\r\n  totalPrice() {\r\n    let acum = 0;\r\n    if(this.state.orders !== []){\r\n      this.state.orders.map( (order, i) => {\r\n        const parsePrice = parseInt(order.orderPrice);\r\n        acum = acum + parsePrice;\r\n        return acum;\r\n      })\r\n      return(<p className='total-price'>Total: S/ {acum}</p>);\r\n    } \r\n  } \r\n\r\n  deleteOrder(e) {\r\n    const target = e.target;\r\n    const orders= this.state.orders;    \r\n    delete orders[target.id];\r\n    this.setState({orders: orders});\r\n  }\r\n  \r\n  handleChangeStatus() {\r\n    this.props.handleChangeStatus(false)\r\n  }\r\n\r\n  handleCancel() {\r\n    this.props.handleCancel(false)\r\n  }\r\n}\r\n\r\nexport default TakeOrder;\r\n","import React, { Component } from 'react';\r\nimport TakeOrder from '../take_order/TakeOrder';\r\nimport { Container, Input, Icon, Row } from 'react-materialize';\r\n\r\nclass TakeName extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      tookName: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.tookName) {\r\n      return (\r\n        <div>\r\n          <TakeOrder name={this.state.name} handleChangeStatus={this.handleChangeStatus.bind(this)}  handleCancel={this.handleCancel.bind(this)}/>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <Row className=\"viewport\">\r\n            <form className=\"col s12 form\" onSubmit={this.handleSubmit.bind(this)}>\r\n              <Input s={12} onChange={this.handleChange.bind(this)} label=\"Nombre\" />\r\n              <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Enviar\r\n                <Icon small right>send</Icon>\r\n              </button>\r\n            </form>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if(this.state.name){\r\n      this.setState({ tookName: true })\r\n    }\r\n  }\r\n\r\n  handleCancel(newState) {\r\n    this.setState({ tookName: newState })\r\n  }\r\n\r\n  handleChangeStatus(newState) {\r\n    this.setState({ tookName: newState })    \r\n  }\r\n\r\n}\r\n\r\nexport default TakeName;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TakeName from './components/take_name/TakeName';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <nav className=\"lime lighten-1\">\r\n            <div className=\"nav-wrapper\">\r\n              <a href=\"#\" className=\"brand-logo center\">üçî BURGER QUEEN üëë</a>\r\n            </div>\r\n          </nav>\r\n          <TakeName />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\nclass Page404 extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <h1>404 not found</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport TakeName from './components/take_name/TakeName';\r\nimport Page404 from \"./components/page_404/Page404\";\r\n\r\nconst AppRoutes = () => (\r\n  <App>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={TakeName} />\r\n      <Route component={Page404} />\r\n    </Switch>\r\n  </App>\r\n);\r\n\r\nexport default AppRoutes;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport AppRoutes from './Routes'\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender(\r\n  <Router>\r\n    <AppRoutes />\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}